{{- if eq .Values.mode "Deployment" -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scale-agent.fullname" . }}
  labels:
    {{- include "scale-agent.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "scale-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include "scale-agent-configmap.checksum" . }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "scale-agent.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "scale-agent.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /scale-agent
            - -cfg
            - /etc/scale-agent/config.yaml
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_NAMESPACE
              value: {{ .Release.Namespace }}
          volumeMounts:
          - mountPath: /rootfs
            name: rootfs
            readOnly: false
          - name: cfg-volume
            mountPath: /etc/scale-agent
          #- mountPath: /var/run
          #  name: var-run
          #  readOnly: true
          #- mountPath: /sys
          #  name: sys
          #  readOnly: true
          #- mountPath: /var/lib/docker
          #  name: docker
          #  readOnly: true
          #- mountPath: /dev/disk
          #  name: disk
          #  readOnly: true
      volumes:
      - name: cfg-volume
        configMap:
          name: scale-agent
      - hostPath:
          path: /
        name: rootfs
      - hostPath:
          path: /var/run
        name: var-run
      - hostPath:
          path: /sys
        name: sys
      - hostPath:
          path: /var/lib/docker
        name: docker
      - hostPath:
          path: /dev/disk
        name: disk
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.restartPolicy }}
      restartPolicy: {{ . }}
      {{- end }}
{{- end -}}